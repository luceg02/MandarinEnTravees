security:
    # Configuration du hashage des mots de passe
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # Où trouver les utilisateurs (dans ta base via l'entité User)
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: /
            logout:
                path: app_logout
                target: /

    # Contrôle d'accès par URL
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/moderate, roles: ROLE_ADMIN }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }

    # Hiérarchie des rôles
    role_hierarchy:
        ROLE_JOURNALIST: ROLE_USER
        ROLE_ADMIN: ROLE_USER

when@test:
    security:
        password_hashers:
            App\Entity\User:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon